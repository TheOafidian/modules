nextflow_process {

    name "Test Process METABULI_BUILD"
    script "../main.nf"
    process "METABULI_BUILD"
    config "./nextflow.config"
    tag "metabuli"
    tag "metabuli/build"
    tag "metabuli/add"
    tag "modules"
    tag "modules_nfcore"

    setup {
        run("METABULI_ADD") {
            script "modules/nf-core/metabuli/add/main.nf"
            process {
                """
                input[0] = [
                    [ id:'test' ],
                        [
                        file(params.modules_testdata_base_path +'genomics/sarscov2/genome/genome.fasta', checkIfExists: true),
                        file(params.modules_testdata_base_path +'genomics/sarscov2/genome/proteome.fasta', checkIfExists: true),
                        ]
                    ]
                input[1] = file(params.modules_testdata_base_path +'genomics/sarscov2/metagenome/prot_names.dmp', checkIfExists: true)
                input[2] = file(params.modules_testdata_base_path +'genomics/sarscov2/metagenome/prot_nodes.dmp', checkIfExists: true)
                input[3] = [] // needs a merged.dmp
                input[4] = file(params.modules_testdata_base_path + 'delete_me/metabuli/acc2taxid', checkIfExists: true)
                """
            }
        }

    }

    test("sarscov2 protein_db") {

        when {
            process {
                """
                input[0] = METABULI_ADD.out.db
                input[1] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot (process.out).match()},
            )
        }
    }

    test("sarscov2 - protein_db - acc2taxid") {

        when {
            process {
                """
                input[0] = METABULI_ADD.out.db
                input[1] = file(params.modules_testdata_base_path + 'delete_me/metabuli/acc2taxid', checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot (process.out).match()},
            )
        }
    }

    test("sarscov2 protein_db stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = METABULI_ADD.out.db
                input[1] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot (process.out).match()}
            )
        }
    }
}
